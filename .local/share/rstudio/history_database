1742091902070:#| code-fold: true
1742091902071:# load libraries
1742091902073:library(tidyverse)
1742091903188:library(GGally)
1742091903357:library(purrr)
1742091903358:library(knitr)
1742091903367:library(tidymodels)
1742091905336:library(leaps)
1742091905349:library(mltools)
1742091905364:set.seed(310)
1742091905510:#| echo: false
1742091905513:us_covid <- read_csv("../data/raw/US.csv")
1742091906445:#| label: tbl-selected-data
1742091906447:#| tbl-cap: "Preview of US COVID-19 search trend dataset with selected variables of interest."
1742091906448:us_selected <- us_covid |>
1742091906449:select(date, search_trends_anxiety, new_persons_vaccinated, new_hospitalized_patients, new_confirmed, new_intensive_care_patients) |>
1742091906450:drop_na()
1742091906471:knitr::kable(head(us_selected))
1742091907107:# summarise all numeric values with 5 number summary + mean
1742091907109:covid_summary <- us_selected %>%
1742091907111:summarise(across(where(is.numeric), list(
1742091907112:Min = min,
1742091907114:Q25 = ~quantile(.x, 0.25),
1742091907115:Mean = mean,
1742091907116:Median = median,
1742091907118:Q75 = ~quantile(.x, 0.75),
1742091907119:Max = max
1742091907120:), .names = "{.col}_{.fn}")) %>%
1742091907121:pivot_longer(cols = everything(), names_to = c("Variable", "Statistic"), names_sep = "_(?=[^_]+$)") %>%
1742091907122:pivot_wider(names_from = Statistic, values_from = value)
1742091907184:#| label: tbl-summary
1742091907187:#| tbl-cap: "Summary statistics of selected variables with missing values counts of the original dataset."
1742091907189:dates_day <- as.numeric(us_selected$date)
1742091907192:date_summary <- tibble(Variable = c("date"),
1742091907193:Min = min(dates_day),
1742091907195:Q25 = quantile(dates_day, 0.25),
1742091907197:Mean = mean(dates_day),
1742091907198:Median = median(dates_day),
1742091907199:Q75 = quantile(dates_day, 0.75),
1742091907201:Max = max(dates_day))|>
1742091907202:mutate(across(where(is.numeric), as_date))
1742091907219:table_summary <- rbind(covid_summary,date_summary)
1742091907233:#Count missing values from original dataset
1742091907235:us_missing <- us_covid |>
1742091907236:select(search_trends_anxiety, new_persons_vaccinated, new_hospitalized_patients,
1742091907238:new_confirmed, new_intensive_care_patients,date)
1742091907250:us_missing_counts <- tibble(Variable = table_summary$Variable,
1742091907251:Observations = colSums(!is.na(us_missing)),
1742091907253:Missing = colSums(is.na(us_missing)))
1742091907261:#combine together all summary data
1742091907262:table_summary_final <- inner_join(table_summary, us_missing_counts, by = "Variable")
1742091907276:knitr::kable(table_summary_final)
1742091907338:#| label: fig-pairplot
1742091907340:#| fig-cap: "Pairs plot for all variables of interest for exploration. "
1742091907341:options(repr.plot.width = 16, repr.plot.height = 12) # change plot sizes to an appropiate size
1742091907343:ggpairs(us_selected, aes(alpha = 0.5)) +
1742091907344:theme(text = element_text(size = 13)) +
1742091907345:ggtitle("Pairs plot for all variables of interest for exploration") +
1742091907347:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1742091912190:#| label: fig-trend
1742091912193:#| fig-cap: "Time Series Plot of the Normalized Google Search Volume for Anxiety on a given date."
1742091912194:options(repr.plot.width = 14, repr.plot.height = 9)
1742091912195:ggplot(us_covid, aes(y = search_trends_anxiety, x = date)) +
1742091912196:geom_line(color = "cornflower blue") +
1742091912198:labs(title = "Google Searches Regarding Anxiety over Time", x = "Date", y = "Normalized Search Volume")
1742091912538:set.seed(310)
1742091912540:# split data into training and testing sets:
1742091912542:bwd_select_train <- sample_n(us_selected, size = nrow(us_selected) * 0.3,
1742091912543:replace = FALSE)
1742091912554:model_data <- anti_join(us_selected,
1742091912555:bwd_select_train,
1742091912556:by = "date")
1742091912565:covid_train <- sample_n(model_data, size = nrow(model_data) * 0.7,
1742091912566:replace = FALSE)
1742091912575:covid_test <- anti_join(model_data,
1742091912577:covid_train,
1742091912578:by = "date")
1742091912600:#| label: tbl-bwd-selection
1742091912603:#| tbl-cap: "The features being selected during each step of backward model selection."
1742091912604:# converts dates into number of days:
1742091912605:covid_train_numeric <- covid_train |>
1742091912607:mutate(date = as.numeric(date))
1742091912616:# backward selection:
1742091912617:covid_backward_sel <- regsubsets(x = search_trends_anxiety ~ new_persons_vaccinated +
1742091912619:new_hospitalized_patients +
1742091912620:new_confirmed +
1742091912621:new_intensive_care_patients +
1742091912623:date,
1742091912624:nvmax = 5,
1742091912625:data = covid_train_numeric,
1742091912627:method = "backward",)
1742091912647:covid_bwd_summary <- summary(covid_backward_sel)
1742091912670:knitr::kable(covid_bwd_summary$which)
1742091912725:#| label: tbl-bwd-performance
1742091912727:#| tbl-cap: "RSQ, RSS, and Adjusted R^2 of each model with the number of features used."
1742091912728:covid_bwd_performance <- tibble(n_input_variables = 1:5,
1742091912729:RSQ = covid_bwd_summary$rsq,
1742091912730:ADJ.R2 = covid_bwd_summary$adjr2)
1742091912733:knitr::kable(covid_bwd_performance)
1742091912764:highest_ADJ.R2 <- round(pull(slice_max(covid_bwd_performance, ADJ.R2), ADJ.R2), 3)
1742091912769:chosen_n_input <- covid_bwd_performance |>
1742091912771:slice_max(ADJ.R2) |>
1742091912773:pull(n_input_variables)
1742091912795:#| label: tbl-coefficients
1742091912797:#| tbl-cap: "Coefficients and intercept of the selected linear model."
1742091912798:final_model <- lm(search_trends_anxiety ~ new_persons_vaccinated + new_hospitalized_patients + date, data = covid_train_numeric)
1742091912829:final_model_df <- tidy(final_model)
1742091912842:knitr::kable(final_model_df)
1742091912876:new_vax_coef <- signif(final_model_df$estimate[2], digit = 3)
1742091912880:new_hos_coef <- signif(final_model_df$estimate[3], digit = 3)
1742091912883:date_coef    <- signif(final_model_df$estimate[4], digit = 3)
1742091912886:intercept_coef <- round(final_model_df$estimate[1], 3)
1742091912905:#| label: tbl-metrics
1742091912908:#| tbl-cap: "Model performance metrics."
1742091912909:# make sure dates are in numeric form as days since 1970-01-01
1742091912910:covid_test_numeric <- covid_test|>
1742091912911:mutate(date = as.numeric(date))
1742091912920:# apply the model to predict test data
1742091912921:final_model_predictions <- predict(final_model, newdata = covid_test_numeric)
1742091912926:# find the RMSE between the model's prediction and the actual values
1742091912927:final_model_RMSPE = rmse(preds = final_model_predictions,
1742091912928:actuals = covid_test_numeric$search_trends_anxiety)
1742091912931:# R-squared:
1742091912932:r_sqr <- summary(final_model)$r.squared
1742091912935:# create dataframe with RMSPE and R-squared
1742091912937:metrics_results<-tibble(RMSPE = final_model_RMSPE, R_square = r_sqr)
1742091912943:knitr::kable(metrics_results)
